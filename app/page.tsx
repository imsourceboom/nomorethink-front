'use client';

import TelegramWrapper from '@/app/components/TelegramWrapper';
import Header from '@/app/components/Header';
import Dashboard from '@/app/components/Dashboard';
import CoinSection from '@/app/components/CoinSection';
import TotalAmount from '@/app/components/TotalAmount';
import FloatingMenu from '@/app/components/FloatingMenu';
import { useWallet } from '@/app/hooks/useWallet';
import { useTelegram } from '@/app/hooks/useTelegram';
import { DEFAULT_COINS } from '@/app/constants/coins';
import { CoinSection as CoinSectionType, CoinInfo } from '@/app/types/wallet';
import ErrorBoundary from '@/app/components/ErrorBoundary';

export default function Home() {
    const { 
        isConnected, 
        address, 
        isLoading, 
        error,
        handleWalletConnect,
        resetError
    } = useWallet();
    const { handleMainButtonClick } = useTelegram();

    // ÏΩîÏù∏ ÏÑπÏÖò Îç∞Ïù¥ÌÑ∞
    const sections: CoinSectionType[] = [
        {
            title: 'Î≥¥Ïú† ÏΩîÏù∏',
            coins: DEFAULT_COINS
        },
        {
            title: 'ÌòÑÏû¨ Í∞ÄÏπò',
            coins: DEFAULT_COINS.map((coin: CoinInfo) => ({
                ...coin,
                amount: coin.value
            }))
        }
    ];

    // ÌÖåÏä§Ìä∏ ÏÑπÏÖò Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    const testSections: CoinSectionType[] = Array.from({ length: 3 }, (_, i) => ({
        title: `ÌÖåÏä§Ìä∏ ÏÑπÏÖò ${i + 1}`,
        coins: DEFAULT_COINS.map((coin: CoinInfo) => ({
            ...coin,
            amount: coin.amount * (i + 1)
        }))
    }));

    // Ï¥ù ÏΩîÏù∏ ÏàòÎüâ Í≥ÑÏÇ∞
    const totalAmount = DEFAULT_COINS.reduce((acc: number, coin: CoinInfo) => acc + coin.amount, 0);

    const handleMenuClick = () => {
        // Î©îÎâ¥ ÌÅ¥Î¶≠ Ïãú Ïã§ÌñâÌï† Î°úÏßÅ
        console.log('Î©îÎâ¥ ÌÅ¥Î¶≠Îê®');
    };

    return (
        <ErrorBoundary>
            <TelegramWrapper
                mainButtonText="ÏãúÏûëÌïòÍ∏∞"
                onMainButtonClick={handleMainButtonClick}
            >
                <main className="flex min-h-screen flex-col items-center justify-start px-4 pt-24 pb-6">
                    <div className="w-full max-w-md mx-auto flex flex-col items-center justify-start">
                        <Header 
                            isConnected={isConnected}
                            address={address}
                            isLoading={isLoading}
                            error={error}
                            onWalletConnect={handleWalletConnect}
                            resetError={resetError}
                        />

                        <Dashboard 
                            title="üß† NoMoreThink"
                            description="ÌÖîÎ†àÍ∑∏Îû® ÎØ∏ÎãàÏï± Ïó∞Îèô ÌÖåÏä§Ìä∏ ÌôîÎ©¥ÏûÖÎãàÎã§."
                        />

                        {/* ÏΩîÏù∏ ÏÑπÏÖòÎì§ */}
                        {sections.map((section, index) => (
                            <CoinSection key={`main-${index}`} section={section} />
                        ))}

                        <TotalAmount amount={totalAmount} />

                        {/* Ïä§ÌÅ¨Î°§ ÌÖåÏä§Ìä∏Ïö© ÏÑπÏÖòÎì§ */}
                        {testSections.map((section, index) => (
                            <CoinSection key={`test-${index}`} section={section} />
                        ))}
                    </div>
                </main>
                <FloatingMenu onMenuClick={handleMenuClick} />
            </TelegramWrapper>
        </ErrorBoundary>
    );
}
